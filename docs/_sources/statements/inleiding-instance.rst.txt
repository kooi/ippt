Inleiding
:::::::::

.. <korte uitleg, direct zelf proberen oid in de oefenopgaven; eind van de les/vóór begin volgende les (?) afmaken inleveropgaven (beginnen met deadlines?)>..

De opzet die we gebruiken is dat er telkens een klein stukje uitleg met in die tekst interactieve voorbeelden -- je kunt de voorbeelden dus aanpassen en kijken wat er gebeurt met het programma. Deze voorbeelden worden vervolgens alleen *niet opgeslagen*, maak dus geen enorme programma's!

Aan het einde van een stukje theorie staan oefenopdrachten, deze zijn zeer nuttig om door te werken om te kijken of je de theorie begrijpt maar hoef je niet in te leveren.

Aan het einde van het hoofdstuk staan de opdrachten die je wel in moet leveren. Deze staan gelinkt, je wordt hiervoor automatisch doorverwezen naar een externe plek: repl.it. Wat je maakt in repl.it wordt automatisch opgeslagen en als je klaar bent kun je deze inleveren m.b.v. submit.

.. iets met plaatjes enzo..

Wij gaan leren tekenen met Python Turtle. Om hiermee te werken zullen we eerst een de module ``turtle`` moeten aanroepen en vervolgens een turtle-*object* moeten maken. Dit klinkt ingewikkeld maar kortweg willen we niet in het wilde weg opdrachten gaan roepen, maar we willen dat 'e'en specifiek schildpad opdrachten uit laten voeren. Dit doen we met de onderstaande code:

.. activecode:: codeturtleinstance
   :caption: Een turtle genaamd Tina
   :nocodelens:
   :language: python

   import turtle
   tina = turtle.Turtle()
   tina.shape("turtle")

We krijgen nu een scherm met een schildpad met de naam ``tina`` die we vervolgens opdrachten uit kunnen laten voeren.
